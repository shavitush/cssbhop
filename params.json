{
  "name": "CSSBhop",
  "tagline": "Safe to use client sided automated bunnyhop for Counter-Strike: Source.",
  "body": "# CS:S Auto Bunnyhop (C#)\r\nA client sided bhop cheat that doesn't let you go on VAC secured servers.\r\n___\r\n\r\n* This tool is basically client sided autobunnyhop for Counter-Strike: Source, works as an external cheat and uses the Win32API functions `ReadProcessMemory` and `WriteProcessMemory`.\r\n* It's probably VAC detected, so if you run it without using `-insecure` in your CS:S startup parameters, CS:S and the cheat will just terminate to avoid a VAC ban. (You could edit the source code to allow you; but don't risk a VAC ban, it's not worth it!)\r\n* It could be used for purposes like creating a fully featured external C# cheat for Source Engine games or even simply port to CS:GO.\r\n\r\nStructure\r\n--\r\n* `Program.cs` - initializes the thread, `GameProcess` class and grabs modules.\r\n* `Offsets.cs` - has memory addresses and offsets, they'll probably break through updates.\r\n* `GameProcess.cs` - a simple to use and fully commented class for cheat usage.\r\n\r\nLicense\r\n--\r\nGNU GPL v3, see **[LICENSE](https://github.com/shavitush/cssbhop/blob/master/LICENSE)**.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}